<p id="notice"><%= notice %></p>

<h1>Listing Companies</h1>

<table class="table table-striped companies">
  <thead>
    <tr>
      <th>Name</th>
      <th>Logo</th>
      <th colspan="2"></th>
    </tr>
  </thead>

  <tbody>
    <% @companies.each do |company| %>
      <tr>
        <td><%= link_to company.name, company %></td>
        <td><%= link_to image_tag(company.logo, class: "logo"), company %></td>
        <td><%= link_to 'Edit', edit_company_path(company) %></td>
        <td><%= link_to 'Destroy', company, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Company', new_company_path, class: "btn btn-default" %>

<div class="open-form">

</div>

<script>
  // 1. on the click of NEW COMPANY let's show the form
  $('a[href="/companies/new"]').on("click", function(e){
    e.preventDefault();
    $('.open-form').html("<%= j(render 'form') %>").hide().slideDown(1000);

    // loads the submit handler after the form has been added to the DOM
    attachSubmitHandler();
  });

  // 2. when click on submit form (only in the case this modal)
  //    2.0. [x] it should hijack the button click and stay right here
  //    2.1. [ ] it should send and AJAX post request
  //    2.2. [ ] it should add from the server response the new company to the DOM list
  //    2.3. [ ] it should close the modal
  function attachSubmitHandler(){
    $('form').on("submit", function(e){
      e.preventDefault();
      alert("click");
      debugger;
      var $form = $(this);
      var url = $form.attr("action");  // /companies
      var params = $(this).serialize();  // we want the jQuery object, not just 'this'
      var method = $form.attr("method");  // "post"
      $.ajax({
        url: url,
        data: params,
        method: method,
        dataType: "json"
      })
      .success(function(response){

        console.log(response);
      })
      .error(function(error){
        alert("There was an issue, try again", error);
      })
    })
  }

</script>
